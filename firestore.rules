
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Admin';
    }
    
    function isSalesOrAdmin() {
      let role = get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role;
      return isAuthenticated() && (role == 'Admin' || role == 'Ventas' || role == 'Manager');
    }

    // --- Global Catch-All ---
    // Deny all reads and writes by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- Generic Read-Only Access for most collections ---
    // Any authenticated user can read data from these collections.
    // The application logic is responsible for filtering what a specific role can see.
    match /{collection}/{docId} 
      where collection in [
        'accounts', 'events', 'purchases', 'suppliers', 
        'inventoryItems', 'itemBatches', 'stockTxns', 'productionRuns', 
        'bomLines', 'categories', 'costCenters', 'sampleRequests', 
        'directSales', 'tanks', 'counters', 'migrationFlags'
      ] {
      allow get, list: if isAuthenticated();
    }

    // --- teamMembers Collection ---
    // Users can read the full list, get their own profile,
    // and admins can do anything.
    match /teamMembers/{userId} {
      allow get: if isAuthenticated();
      allow list: if isAuthenticated();
      allow create, delete: if isAdmin();
      allow update: if isUser(userId) || isAdmin();
    }
    
    // --- orders (Interactions) Collection ---
    // Complex rules: Authenticated can create. Admins can manage all.
    // Sales reps can update orders assigned to them.
    match /orders/{orderId} {
        allow get: if isAuthenticated();
        allow list: if isSalesOrAdmin();
        allow create: if isAuthenticated();
        allow update: if isAdmin() || (isSalesOrAdmin() && resource.data.salesRep == get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.name);
        allow delete: if isAdmin();
    }

    // --- stickyNotes Collection ---
    // Users can read/write notes assigned to them or created by them.
    // Admins have full access.
    match /stickyNotes/{noteId} {
        allow get, list: if isAuthenticated();
        allow create: if isAuthenticated() && request.resource.data.creatorId == request.auth.uid;
        allow update, delete: if isAuthenticated() && (resource.data.creatorId == request.auth.uid || resource.data.assignedToId == request.auth.uid || isAdmin());
    }

    // --- Admin-Only Write Access ---
    // Admins have write access to all these collections.
    match /{collection}/{docId} 
      where collection in [
        'accounts', 'events', 'purchases', 'suppliers', 'inventoryItems', 
        'itemBatches', 'stockTxns', 'productionRuns', 'bomLines', 
        'categories', 'costCenters', 'sampleRequests', 'directSales', 
        'tanks', 'counters'
      ] {
        allow write: if isAdmin();
    }
  }
}
