
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to simplify rule definitions
    function isSignedIn() {
      return request.auth != null;
    }

    function isRole(role) {
      return isSignedIn() && get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == role;
    }
    
    function isOwner(doc) {
      return request.auth.uid == doc.data.owner_user_id || request.auth.uid == doc.data.salesRepId || request.auth.uid == doc.data.responsableId;
    }

    // Allow authenticated users to read most collections.
    // The application logic will handle filtering what data to show to whom.
    match /accounts/{accountId} {
      allow read: if isSignedIn();
      allow create, update: if isRole('Admin') || isRole('SalesRep');
      allow delete: if isRole('Admin');
    }

    match /orders/{orderId} {
      allow read: if isSignedIn();
      allow create, update: if isRole('Admin') || isRole('SalesRep') || isRole('Clavadista') || isRole('Distributor');
      allow delete: if isRole('Admin');
    }
    
    match /events/{eventId} {
       allow read: if isSignedIn();
       allow create, update, delete: if isRole('Admin');
    }
    
    match /teamMembers/{userId} {
      allow read: if isSignedIn();
      // Only Admins can create or modify team members. Users can't edit their own profile directly via rules yet.
      allow create, update: if isRole('Admin');
      // Protect against self-deletion by mistake in a script
      allow delete: if isRole('Admin') && request.auth.uid != userId;
    }
    
    match /suppliers/{supplierId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isRole('Admin');
    }
    
    match /purchases/{purchaseId} {
        allow read: if isRole('Admin');
        allow create, update, delete: if isRole('Admin');
    }

    match /inventoryItems/{itemId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isRole('Admin');
    }
    
    match /itemBatches/{batchId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isRole('Admin');
    }

    match /stockTxns/{txnId} {
        allow read: if isRole('Admin');
        allow create: if isRole('Admin'); // Transactions should be immutable
        allow update, delete: if false; 
    }

    match /productionRuns/{runId} {
        allow read: if isRole('Admin');
        allow create, update, delete: if isRole('Admin');
    }
    
    match /bomLines/{bomId} {
        allow read: if isRole('Admin');
        allow create, update, delete: if isRole('Admin');
    }

    match /tanks/{tankId} {
        allow read: if isRole('Admin');
        allow create, update: if isRole('Admin');
    }
    
    match /directSales/{saleId} {
        allow read: if isRole('Admin') || isRole('Distributor');
        allow create, update, delete: if isRole('Admin');
    }
    
    match /sampleRequests/{reqId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isRole('Admin');
    }

    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isRole('Admin');
    }

    match /counters/{counterId} {
        allow read, write: if isRole('Admin'); // For SKU generation, etc.
    }
    
    match /categories/{catId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isRole('Admin');
    }

    match /costCenters/{ccId} {
        allow read: if isRole('Admin');
        allow create, update, delete: if isRole('Admin');
    }
    
    match /stickyNotes/{noteId} {
        allow read, create, update, delete: if isSignedIn(); // Allow users to manage their own notes
    }

    // Fallback for any other collections, default deny.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
